--== Services ==--
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local CollectionService = game:GetService("CollectionService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

--== GUI эхлэл ==--
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "Sekai Egg Esp"
screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 220, 0, 120)
frame.Position = UDim2.new(0.5, -110, 0.5, -60)
frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
frame.BorderSizePixel = 0
frame.Active = true
frame.Parent = screenGui

-- Header
local header = Instance.new("TextLabel")
header.Size = UDim2.new(1, 0, 0, 30)
header.BackgroundTransparency = 1
header.Text = "Sekai Egg ESP"
header.TextColor3 = Color3.fromRGB(0, 255, 0)
header.Font = Enum.Font.Code
header.TextScaled = true
header.Parent = frame

-- Button
local button = Instance.new("TextButton")
button.Size = UDim2.new(1, 0, 0, 40)
button.Position = UDim2.new(0, 0, 0, 40)
button.BackgroundColor3 = Color3.fromRGB(50, 50, 200)
button.Text = "ESP ON"
button.TextColor3 = Color3.new(1, 1, 1)
button.Font = Enum.Font.Code
button.TextScaled = true
button.Parent = frame

-- Label
local stateLabel = Instance.new("TextLabel")
stateLabel.Size = UDim2.new(1, 0, 0, 30)
stateLabel.Position = UDim2.new(0, 0, 0, 80)
stateLabel.BackgroundTransparency = 1
stateLabel.Text = "ESP: ENABLED"
stateLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
stateLabel.Font = Enum.Font.Code
stateLabel.TextScaled = true
stateLabel.Parent = frame

--== Dragging Logic ==--
local dragging = false
local dragInput, dragStart, startPos

header.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = frame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

header.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		local delta = input.Position - dragStart
		frame.Position = UDim2.new(
			startPos.X.Scale,
			startPos.X.Offset + delta.X,
			startPos.Y.Scale,
			startPos.Y.Offset + delta.Y
		)
	end
end)

--== Rainbow Button ==--
task.spawn(function()
	local hue = 0
	while task.wait() do
		hue = (hue + 0.01) % 1
		button.BackgroundColor3 = Color3.fromHSV(hue, 1, 1)
	end
end)

--== ESP Logic ==--
local espEnabled = true
local espCache = {}
local activeEggs = {}

-- PetEggService grab
local hatchFunction = getupvalue(getupvalue(getconnections(ReplicatedStorage.GameEvents.PetEggService.OnClientEvent)[1].Function, 1), 2)
local eggModels = getupvalue(hatchFunction, 1)
local eggPets = getupvalue(hatchFunction, 2)

local function getObjectFromId(objectId)
	for eggModel in eggModels do
		if eggModel:GetAttribute("OBJECT_UUID") == objectId then
			return eggModel
		end
	end
end

local function UpdateEsp(objectId, petName)
	local object = getObjectFromId(objectId)
	if not object or not espCache[objectId] then return end
	local eggName = object:GetAttribute("EggName")
	espCache[objectId].Text = eggName .. " | " .. petName
end

local function AddEsp(object)
	if object:GetAttribute("OWNER") ~= LocalPlayer.Name then return end
	local eggName = object:GetAttribute("EggName")
	local petName = eggPets[object:GetAttribute("OBJECT_UUID")]
	local objectId = object:GetAttribute("OBJECT_UUID")
	if not objectId then return end

	local draw = Drawing.new("Text")
	draw.Text = eggName .. " | " .. (petName or "?")
	draw.Size = 18
	draw.Color = Color3.new(1, 1, 1)
	draw.Outline = true
	draw.OutlineColor = Color3.new(0, 0, 0)
	draw.Center = true
	draw.Visible = false

	espCache[objectId] = draw
	activeEggs[objectId] = object
end

local function RemoveEsp(object)
	if object:GetAttribute("OWNER") ~= LocalPlayer.Name then return end
	local objectId = object:GetAttribute("OBJECT_UUID")
	if espCache[objectId] then
		espCache[objectId]:Remove()
		espCache[objectId] = nil
	end
	activeEggs[objectId] = nil
end

local function UpdateAllEsp()
	for objectId, object in pairs(activeEggs) do
		local draw = espCache[objectId]
		if not draw then continue end
		if not object or not object:IsDescendantOf(workspace) then
			activeEggs[objectId] = nil
			draw.Visible = false
			continue
		end
		if espEnabled then
			local pos, onScreen = Camera:WorldToViewportPoint(object:GetPivot().Position)
			if onScreen then
				draw.Position = Vector2.new(pos.X, pos.Y)
				draw.Visible = true
			else
				draw.Visible = false
			end
		else
			draw.Visible = false
		end
	end
end

for _, object in CollectionService:GetTagged("PetEggServer") do
	task.spawn(AddEsp, object)
end

CollectionService:GetInstanceAddedSignal("PetEggServer"):Connect(AddEsp)
CollectionService:GetInstanceRemovedSignal("PetEggServer"):Connect(RemoveEsp)

local old; old = hookfunction(getconnections(ReplicatedStorage.GameEvents.EggReadyToHatch_RE.OnClientEvent)[1].Function, newcclosure(function(objectId, petName)
	UpdateEsp(objectId, petName)
	return old(objectId, petName)
end))

RunService.RenderStepped:Connect(UpdateAllEsp)

--== Button Toggle ==--
button.MouseButton1Click:Connect(function()
	espEnabled = not espEnabled
	button.Text = espEnabled and "ESP ON" or "ESP OFF"
	stateLabel.Text = espEnabled and "ESP: ENABLED" or "ESP: DISABLED"
end)
